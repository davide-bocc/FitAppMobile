buildscript {
    ext {
        buildToolsVersion = "34.0.0"
        minSdkVersion = 23
        compileSdkVersion = 34
        targetSdkVersion = 34
        kotlinVersion = "1.9.20"
        frescoVersion = "2.6.0"
        ndkVersion = "26.2.11394342"
        reactNativeReanimatedVersion = "3.6.2"
        reactNativeVersion = "0.73.6"
        expoUpdatesVersion = "0.18.19"  // Aggiunto per expo-updates
    }

    repositories {
        maven { url 'https://repo.expo.dev/android' }
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.google.com' }

    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.0.2")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
        //classpath("com.expo.gradle:expo-updates-gradle-plugin:0.22.0")  // Aggiunto
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }

        // Repository specifici per React Native
        exclusiveContent {
            forRepository {
                maven {
                    url("$rootDir/../node_modules/react-native/android")
                }
                maven {
                    url("$rootDir/../node_modules/jsc-android/dist")
                }
            }
            filter {
                includeGroup("com.facebook.react")
                includeGroup("org.webkit")
            }
        }

        // Repository Expo
        maven {
            url("$rootDir/../node_modules/expo-camera/android/maven")
        }
        maven {
            url new File(
                ["node", "--print", "require.resolve('expo-modules-core/package.json')"].execute(null, rootDir).text.trim(),
                "../android/maven"
            )
        }
        maven {
            url("${rootDir}/../node_modules/expo-updates/android/maven")
        }
    }
}

// Configurazioni globali
tasks.withType(org.gradle.api.tasks.Delete).configureEach {
    delete rootProject.layout.buildDirectory
}

tasks.named("wrapper") {
    gradleVersion = "8.0.2"
    distributionType = Wrapper.DistributionType.ALL
}

// Configurazione Kotlin
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "17"
        freeCompilerArgs += ["-Xjsr305=strict"]
    }
}